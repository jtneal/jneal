version: 2.1

############################################################
# Shared Jobs and Configuration
############################################################

executors:
  node-executor:
    docker:
      - image: 'circleci/node:12-browsers'

commands:
  attach-workspace-step:
    steps:
      - attach_workspace:
          at: '.'
  persist-workspace-step:
    steps:
      - persist_to_workspace:
          root: '.'
          paths:
            - '.'

############################################################
# Workflow
############################################################

workflows:
  version: 2.1
  pipeline:
    jobs:
      - build
      - static-analysis:
          requires:
            - build
      - unit-tests:
          requires:
            - build
      - e2e-tests:
          requires:
            - build
      - sonar-scanner:
          requires:
            - unit-tests
      - docker_build:
          context: 'prod-jneal-ecr'
          requires:
            - sonar-scanner
          filters:
            branches:
              only:
                - master
      - deploy_to_prod:
          context: 'prod-jneal-ecs'
          requires:
            - docker_build

############################################################
# Jobs
############################################################

jobs:

  build:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: 'Reset Master Branch'
          command: |
            if ["$CIRCLE_BRANCH" != "master"]; then
              git branch -f master origin/master
            fi
      - restore_cache:
          keys:
            - 'v1-npm-deps-{{ checksum "package-lock.json" }}'
            - 'v1-npm-deps-'
      - run:
          name: 'Install NPM Dependencies'
          command: 'npm install'
      - save_cache:
          key: 'v1-npm-deps-{{ checksum "package-lock.json" }}'
          paths:
            - 'node_modules'
      - persist-workspace-step

  static-analysis:
    executor: node-executor
    steps:
      - attach-workspace-step
      - run:
          name: 'Run Static Analysis'
          command: 'npm run lint'

  unit-tests:
    executor: node-executor
    steps:
      - attach-workspace-step
      - run:
          name: 'Run Unit Tests'
          command: 'npm run test:once'
      - store_test_results:
          path: './test-results'
      - persist-workspace-step

  e2e-tests:
    executor: node-executor
    steps:
      - attach-workspace-step
      - run:
          name: 'Run E2E Tests'
          command: 'npm run e2e:once'
      - store_test_results:
          path: './test-results'

  sonar-scanner:
    working_directory: '/usr/src'
    docker:
      - image: 'newtmitch/sonar-scanner:4-alpine'
    steps:
      - attach-workspace-step
      - run:
          name: 'Run & Report Coverage'
          command: |
            sed -i "s+/home/circleci/project+/usr/src+" coverage/jneal/lcov.info
            sonar-scanner \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=$SONAR_TOKEN \
              -Dsonar.organization=jtneal \
              -Dsonar.projectKey=jtneal_jneal \
              -Dsonar.projectName=jneal \
              -Dsonar.projectVersion=$CIRCLE_SHA1 \
              -Dsonar.branch.name=$CIRCLE_BRANCH

  docker_build:
    docker:
      - image: 'circleci/python:3.7'
    steps:
      - attach-workspace-step
      - setup_remote_docker
      - run:
          name: 'Set Image Tag'
          command: |
            tag="release-$(echo $CIRCLE_SHA1 | cut -c1-7)"
            docker_image="703263122238.dkr.ecr.us-east-2.amazonaws.com/prod-jneal-repo:$tag"
            echo "export DOCKER_IMAGE=$docker_image" >> $BASH_ENV
      - run:
          name: 'Build Docker Image'
          command: 'docker build -t $DOCKER_IMAGE .'
      - run:
          name: 'Install AWS CLI & Authenticate'
          command: |
            sudo pip install awscli
            $(aws ecr get-login --no-include-email --region us-east-2)
      - run:
          name: 'Push Docker Image'
          command: 'docker push $DOCKER_IMAGE'

  deploy_to_prod:
    docker:
      - image: 'circleci/python:3.7'
    steps:
      - run:
          name: 'Set Image Tag'
          command: |
            tag="release-$(echo $CIRCLE_SHA1 | cut -c1-7)"
            docker_image="703263122238.dkr.ecr.us-east-2.amazonaws.com/prod-jneal-repo:$tag"
            echo "export DOCKER_IMAGE=$docker_image" >> $BASH_ENV
      - run:
          name: 'Install AWS CLI'
          command: 'sudo pip install awscli'
      - run:
          name: 'Create Task Definition'
          command: 'aws ecs describe-task-definition --task-definition prod-jneal | jq ".taskDefinition | del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities) | .containerDefinitions[0].image = env.DOCKER_IMAGE" > task-definition.json'
      - run:
          name: 'Deploy Task'
          command: 'aws ecs register-task-definition --cli-input-json file://task-definition.json'
      - run:
          name: 'Deploy Service'
          command: 'aws ecs update-service --cluster prod-fargate-cluster --service prod-jneal --task-definition prod-jneal'
